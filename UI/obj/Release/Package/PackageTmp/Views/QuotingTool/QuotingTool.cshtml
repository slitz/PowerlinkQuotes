@using UI.Models
@model QuotingToolModel

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm())
{
    <section class="container">
        <div class="row" id="stations-listbox">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h4 class="qualification-title">Select Stations</h4>
                        <div>
                            @Html.HiddenFor(m => m.NavCategory, new { @Value = "stations" })
                            @Html.ListBoxFor(m => m.SelectedProductsList, Model.ProductDataList, new Dictionary<string, object>() {{"multiple", "multiple"},
                                {"class", "form-control"}, {"style", "width:100%;height:150px"}, {"id", "stations-listbox-control"}})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="container">
        <div class="row" id="kits-listbox" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h4 class="qualification-title">Select Kits</h4>
                        <div>
                            @Html.HiddenFor(m => m.NavCategory, new { @Value = "kits" })
                            @Html.HiddenFor(m => m.SelectedProductsList)
                            @Html.ListBoxFor(m => m.SelectedKitsList, Model.KitDataList, new Dictionary<string, object>() {{"multiple", "multiple"},
                                {"class", "form-control"}, {"style", "width:100%;height:150px"}, {"id", "kits-listbox-control"}})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="container">
        <div class="row" id="cloud-plans-listbox" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h4 class="qualification-title">Select Cloud Plans</h4>
                        <div>
                            @Html.HiddenFor(m => m.NavCategory, new { @Value = "kits" })
                            @Html.HiddenFor(m => m.SelectedProductsList)
                            @Html.ListBoxFor(m => m.SelectedCloudPlansList, Model.CloudPlanDataList, new Dictionary<string, object>() {{"class", "form-control"}, 
                                {"style", "width:100%;height:150px"}, {"id", "cloud-plans-listbox-control"}})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="container">
        <div class="row" id="assure-plans-listbox" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h4 class="qualification-title">Select Assure Plans</h4>
                        <div>
                            @Html.HiddenFor(m => m.NavCategory, new { @Value = "kits" })
                            @Html.HiddenFor(m => m.SelectedProductsList)
                            @Html.ListBoxFor(m => m.SelectedAssurePlansList, Model.AssurePlanDataList, new Dictionary<string, object>() {{"class", "form-control"}, 
                                {"style", "width:100%;height:150px"}, {"id", "assure-plans-listbox-control"}})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="container">
        <div class="row" id="activation-plans-listbox" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h4 class="qualification-title">Select Activation & Validation Items</h4>
                        <div>
                            @Html.HiddenFor(m => m.NavCategory, new { @Value = "kits" })
                            @Html.HiddenFor(m => m.SelectedProductsList)
                            @Html.ListBoxFor(m => m.SelectedActivationItemsList, Model.ActivationDataList, new Dictionary<string, object>() {{"class", "form-control"}, 
                                {"style", "width:100%;height:150px"}, {"id", "activation-plans-listbox-control"}})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="container">
        <div class="row" id="header-quantity" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h4 class="qualification-title" id="quantity-header-text"></h4>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="container">
        <div class="row" id="station-quantity" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h5 class="qualification-title">Stations</h5>
                        <table id="stations-table" class="table table-striped table-bordered table-hover dataTable no-footer dtr-inline" style="float:none">
                            <thead>
                                <tr>
                                    <th style="width:150px">Code</th>
                                    <th>Description</th>
                                    <th style="width:100px;text-align:center">Unit Price</th>
                                    <th style="width:100px; text-align:center">Quantity</th>
                                    <th style="width:100px; text-align:center">Line Total</th>
                                </tr>
                            </thead>
                            <tbody>
                            @* populate dynamically *@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="container">
        <div class="row" id="kit-quantity" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h5 class="qualification-title">Kits</h5>
                        <table id="kits-table" class="table table-striped table-bordered table-hover dataTable no-footer dtr-inline" style="float:none">
                            <thead>
                                <tr>
                                    <th style="width:150px">Code</th>
                                    <th>Description</th>
                                    <th style="width:100px;text-align:center">Unit Price</th>
                                    <th style="width:100px; text-align:center">Quantity</th>
                                    <th style="width:100px; text-align:center">Line Total</th>
                                </tr>
                            </thead>
                            <tbody>
                            @* populate dynamically *@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <section class="container">
        <div class="row" id="cloud-plans-quantity" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h5 class="qualification-title">Cloud Plans</h5>
                        <table id="cloud-plans-table" class="table table-striped table-bordered table-hover dataTable no-footer dtr-inline" style="float:none">
                            <thead>
                                <tr>
                                    <th style="width:150px">Code</th>
                                    <th>Description</th>
                                    <th style="width:100px;text-align:center">Unit Price</th>
                                    <th style="width:100px; text-align:center">Quantity</th>
                                    <th style="width:100px; text-align:center">Line Total</th>
                                </tr>
                            </thead>
                            <tbody>
                            @* populate dynamically *@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <section class="container">
        <div class="row" id="assure-plans-quantity" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h5 class="qualification-title">Assure Plans</h5>
                        <table id="assure-plans-table" class="table table-striped table-bordered table-hover dataTable no-footer dtr-inline" style="float:none">
                            <thead>
                                <tr>
                                    <th style="width:150px">Code</th>
                                    <th>Description</th>
                                    <th style="width:100px;text-align:center">Unit Price</th>
                                    <th style="width:100px; text-align:center">Quantity</th>
                                    <th style="width:100px; text-align:center">Line Total</th>
                                </tr>
                            </thead>
                            <tbody>
                            @* populate dynamically *@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <section class="container">
        <div class="row" id="activation-plans-quantity" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <h5 class="qualification-title">Activation & Validation</h5>
                        <table id="activation-plans-table" class="table table-striped table-bordered table-hover dataTable no-footer dtr-inline" style="float:none">
                            <thead>
                                <tr>
                                    <th style="width:150px">Code</th>
                                    <th>Description</th>
                                    <th style="width:100px;text-align:center">Unit Price</th>
                                    <th style="width:100px; text-align:center">Quantity</th>
                                    <th style="width:100px; text-align:center">Line Total</th>
                                </tr>
                            </thead>
                            <tbody>
                            @* populate dynamically *@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <br />
    <section class="container">
        <div class="row" id="quote-total" style="visibility:hidden;display:none">
            <div class="col-md-12">
                <div class="tab-pane fade in active">
                    <div class="container-fluid">
                        <table id="quote-total-table" class="table table-striped table-bordered table-hover dataTable no-footer dtr-inline" style="float:none;border:none">
                            <thead>
                                <tr>
                                    <th style="width:150px;border:none"></th>
                                    <th style="border:none"></th>
                                    <th style="width:100px;border:none"></th>
                                    <th style="width:100px; text-align:right; border:2px solid #ddd">Quote Total:</th>
                                    <th id="quote-total-value" style="width:100px; text-align:right; border:2px solid #ddd"></th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
<br />
<br />
    <section class="container">
        <div class="navbar navbar-default" id="next-nav-panel" style="padding:0;display:block">
            <div class="container-fluid" style="padding-top:8px">
                <div class="navbar-header" style="float:none">
                    <div id="navbar" class="navbar-collapse collapse">
                        <input type="button" id="previous-btn" class="btn btn-default" onclick="determineCurrentNavAndShowAdjacentNavControls('previous')" style="float:left" value="&laquo; Previous" />
                        <input type="button" id="next-btn" class="btn btn-default" onclick="determineCurrentNavAndShowAdjacentNavControls('next')" style="float:right" value="Next &raquo;" />
                        <input type="submit" id="submit-btn" class="btn btn-primary disabled" style="float:right" value="Submit" />
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section scripts
{
    <script type="text/javascript">

        // variables to store the data
        var navCategory = @Html.Raw(Json.Encode(Model.NavCategory));
        var stationsData = @Html.Raw(Json.Encode(Model.ProductDataList));
        var kitsData = @Html.Raw(Json.Encode(Model.KitDataList));
        var cloudPlansData = @Html.Raw(Json.Encode(Model.CloudPlanDataList));
        var assurePlansData = @Html.Raw(Json.Encode(Model.AssurePlanDataList));
        var activationPlansData = @Html.Raw(Json.Encode(Model.ActivationDataList));

        // variables for html elements
        var stationsListBoxDiv = $('#stations-listbox');
        var kitsListBoxDiv = $('#kits-listbox');
        var cloudPlansListBoxDiv = $('#cloud-plans-listbox');
        var assurePlansListBoxDiv = $('#assure-plans-listbox');
        var activationPlansListBoxDiv = $('#activation-plans-listbox');

        var stationsListBoxControl = $('#stations-listbox-control');
        var kitsListBoxControl = $('#kits-listbox-control');
        var cloudPlansListBoxControl = $('#cloud-plans-listbox-control');
        var assurePlansListBoxControl = $('#assure-plans-listbox-control');
        var activationPlansListBoxControl = $('#activation-plans-listbox-control');

        var navMenu = $('#main-nav-list-items');
        var stationsNavText = $('#stations-nav-text');
        var kitsNavText = $('#kits-nav-text');
        var cloudPlansNavText = $('#cloud-plans-nav-text');
        var assurePlansNavText = $('#assure-plans-nav-text');
        var activationPlansNavText = $('#activation-plans-nav-text');
        var quantitiesNavText = $('#quantities-nav-text');
            
        var quantityDivHeader = $('#header-quantity');
        var stationQuantityHeader = $('#station-quantity');
        var kitQuantityHeader = $('#kit-quantity');
        var cloudPlansQuantityHeader = $('#cloud-plans-quantity');
        var assurePlansQuantityHeader = $('#assure-plans-quantity');
        var activationPlansQuantityHeader = $('#activation-plans-quantity');
        
        var quoteTotalTableDiv = $('#quote-total');

        var quantityHeaderText = $('#quantity-header-text');


        var nextButton = $('#next-btn');
        var previousButton = $('#previous-btn');
        var submitButton = $('#submit-btn');

        $(document).ready(function () {
 
            // set initial element style
            setBoldNavText(stationsNavText.attr('id'));
            showHideListBoxes(stationsListBoxDiv.attr('id'));
            showHideNavButtons(stationsNavText.attr('id'));

            stationsNavText.click(function(e) {
                setBoldNavText(stationsNavText.attr('id'));
                showHideListBoxes(stationsListBoxDiv.attr('id'));
                showHideNavButtons(stationsNavText.attr('id'));
            });

            kitsNavText.click(function(e) {
                setBoldNavText(kitsNavText.attr('id'));
                showHideListBoxes(kitsListBoxDiv.attr('id'));
                showHideNavButtons(kitsNavText.attr('id'));
            });

            cloudPlansNavText.click(function(e) {
                setBoldNavText(cloudPlansNavText.attr('id'));
                showHideListBoxes(cloudPlansListBoxDiv.attr('id'));
                showHideNavButtons(cloudPlansNavText.attr('id'));
            });

            assurePlansNavText.click(function(e) {
                setBoldNavText(assurePlansNavText.attr('id'));
                showHideListBoxes(assurePlansListBoxDiv.attr('id'));
                showHideNavButtons(assurePlansNavText.attr('id'));
            });

            activationPlansNavText.click(function(e) {
                setBoldNavText(activationPlansNavText.attr('id'));
                showHideListBoxes(activationPlansListBoxDiv.attr('id'));
                showHideNavButtons(activationPlansNavText.attr('id'));
            });

            quantitiesNavText.click(function(e) {
                setBoldNavText(quantitiesNavText.attr('id'));
                showHideListBoxes(quantitiesNavText.attr('id')); // hides all listboxes

                buildQuantityTables();

                showHideNavButtons(quantitiesNavText.attr('id'));
            });
        });

        // onclick function for next and previous buttons
        function determineCurrentNavAndShowAdjacentNavControls(direction) {
            
            var currentNav;
            var parent = $('#main-navbar');
            var childAnchors = parent.find('a');
            for (i = 0; i < childAnchors.length; ++i)
            {
                if(childAnchors[i].getAttribute('style') == "font-weight: bold;")
                {
                    currentNav = childAnchors[i].innerText;
                    break;
                }
            }
            
            showAdjacentNavItems(currentNav, direction);
        }

        function showAdjacentNavItems(currentNav, direction) {
            if(currentNav !=null && direction != null) {
                var forward = true;
                var adjacentNavTextElement;
                var adjacentListBoxDivElement;

                if(direction != "next") {
                    forward = false;
                };

                // determine adjacent controls
                switch(currentNav) {
                    case "1. Stations":
                        adjacentNavTextElement = kitsNavText;
                        adjacentListBoxDivElement = kitsListBoxDiv;
                        break;
                    case "2. Kits":
                        if(forward) {
                            adjacentNavTextElement = cloudPlansNavText;
                            adjacentListBoxDivElement = cloudPlansListBoxDiv;
                        } else {
                            adjacentNavTextElement = stationsNavText;
                            adjacentListBoxDivElement = stationsListBoxDiv;
                        }
                        break;
                    case "3. Cloud Plans":
                        if(forward) {
                            adjacentNavTextElement = assurePlansNavText;
                            adjacentListBoxDivElement = assurePlansListBoxDiv;
                        } else {
                            adjacentNavTextElement = kitsNavText;
                            adjacentListBoxDivElement = kitsListBoxDiv;
                        }
                        break;
                    case "4. Assure Plans":
                        if(forward) {
                            adjacentNavTextElement = activationPlansNavText;
                            adjacentListBoxDivElement = activationPlansListBoxDiv;
                        } else {
                            adjacentNavTextElement = cloudPlansNavText;
                            adjacentListBoxDivElement = cloudPlansListBoxDiv;
                        }
                        break;
                    case "5. Activation & Validation":
                        if(forward) {
                            adjacentNavTextElement = quantitiesNavText;
                            adjacentListBoxDivElement = quantitiesNavText; // hides all listboxes
                        } else {
                            adjacentNavTextElement = assurePlansNavText;
                            adjacentListBoxDivElement = assurePlansListBoxDiv;
                        }
                        break;
                    case "6. Quantities":
                        adjacentNavTextElement = activationPlansNavText;
                        adjacentListBoxDivElement = activationPlansListBoxDiv;
                        break;
                    default:
                        adjacentNavTextElement = stationsNavText;
                        adjacentListBoxDivElement = stationsListBoxDiv;
                }
            
                //display controls
                setBoldNavText(adjacentNavTextElement.attr('id'));
                showHideListBoxes(adjacentListBoxDivElement.attr('id'));
                showHideNavButtons(adjacentNavTextElement.attr('id'));

                if(currentNav === "5. Activation & Validation" && direction === "next") {
                    buildQuantityTables();
                }
            }
        };

        function showHideListBoxes(id) {
            var listBoxes = $('form').find('.row');
            listBoxes.each(function (){
                if($(this).attr('id') == id) {
                    $(this).css({'visibility':'visible','display':'block'});
                } else {
                    $(this).css({'visibility':'hidden','display':'none'});
                }
            })
        }

        function setBoldNavText(id) {
            var navItems = navMenu.find('a');
            navItems.each(function (){
                if($(this).attr('id') == id) {
                    $(this).css('font-weight', 'bold');
                } else {
                    $(this).css('font-weight', 'normal');
                }
            })
        }

        function showHideNavButtons(id) {
            switch(id) {
                case stationsNavText.attr('id'):
                    nextButton.css('display', 'block');
                    previousButton.css('display', 'none');
                    submitButton.css('display', 'none');
                    break;
                case quantitiesNavText.attr('id'):
                    nextButton.css('display', 'none');
                    previousButton.css('display', 'block');
                    submitButton.css('display', 'block');
                    break;
                default:
                    nextButton.css('display', 'block');
                    previousButton.css('display', 'block');
                    submitButton.css('display', 'none');
            }
        }

        function buildQuantityTables() {
            // get selected values
            var selectedStationsValues = null;
            var selectedKitsValues = null;
            var selectedCloudPlanValues = null; 
            var selectedAssurePlanValues = null;
            var selectedActivationPlanValues = null;

            selectedStationsValues = stationsListBoxControl.find(':selected');
            selectedKitsValues = kitsListBoxControl.find(':selected');
            selectedCloudPlanValues = cloudPlansListBoxControl.find(':selected').text();
            selectedAssurePlanValues = assurePlansListBoxControl.find(':selected').text();
            selectedActivationPlanValues = activationPlansListBoxControl.find(':selected').text();

            quantityDivHeader.css({'visibility':'visible','display':'block'});

            if(selectedStationsValues.length > 0 || selectedKitsValues.length > 0 || selectedCloudPlanValues.length > 0 ||
                selectedAssurePlanValues.length > 0 || selectedActivationPlanValues.length > 0) {
    
                quantityHeaderText.text("Set Quantities"); 

                // build station table
                var stationsTableBodyRowsHtml = "<tr class='odd-table-row'><td class='text-center' colspan=3>No data found</tr></td>";
                var stationsTableBody = $('#stations-table tbody');
            
                if (selectedStationsValues.length > 0) {
                    stationQuantityHeader.css({'visibility':'visible','display':'block'});
                    stationsTableBodyRowsHtml = "";
                        
                    for (var i = 0; i < selectedStationsValues.length; i++) {    
                        var stationsTableRowHtml = constructTableRowHtml(JSON.parse(selectedStationsValues[i].value));
                        stationsTableBodyRowsHtml += stationsTableRowHtml;
                    }
            
                    stationsTableBody.html(stationsTableBodyRowsHtml);
                }

                // build kits table
                var kitsTableBodyRowsHtml = "<tr class='odd-table-row'><td class='text-center' colspan=3>No data found</tr></td>";
                var kitsTableBody = $("#kits-table tbody");
            
                if (selectedKitsValues.length > 0) {
                    kitQuantityHeader.css({'visibility':'visible','display':'block'});
                    kitsTableBodyRowsHtml = "";
            
                    for (var i = 0; i < selectedKitsValues.length; i++) {
                        var kitsTableRowHtml = constructTableRowHtml(JSON.parse(selectedKitsValues[i].value));
                        kitsTableBodyRowsHtml += kitsTableRowHtml;
                    }

                    kitsTableBody.html(kitsTableBodyRowsHtml);
                }

                // build cloud plans table
                var selectedCloudPlansTableBodyRowsHtml = "<tr class='odd-table-row'><td class='text-center' colspan=3>No data found</tr></td>";
                var selectedCloudPlansTableBody = $("#cloud-plans-table tbody");
            
                if (selectedCloudPlanValues.length > 0) {
                    cloudPlansQuantityHeader.css({'visibility':'visible','display':'block'});
                    selectedCloudPlansTableBodyRowsHtml = "";
            
                    var cloudPlanDataJson = JSON.parse(cloudPlansData[cloudPlansListBoxControl.prop('selectedIndex')].Value);
                    for (var i = 0; i < 1; i++) {
                        var cloudPlansTableRowHtml = constructTableRowHtml(cloudPlanDataJson);
                        selectedCloudPlansTableBodyRowsHtml += cloudPlansTableRowHtml;
                    }

                    selectedCloudPlansTableBody.html(selectedCloudPlansTableBodyRowsHtml);
                }

                // build assure plans table
                var selectedAssurePlansTableBodyRowsHtml = "<tr class='odd-table-row'><td class='text-center' colspan=3>No data found</tr></td>";
                var selectedAssurePlansTableBody = $("#assure-plans-table tbody");
            
                if (selectedAssurePlanValues.length > 0) {
                    assurePlansQuantityHeader.css({'visibility':'visible','display':'block'});
                    selectedAssurePlansTableBodyRowsHtml = "";
            
                    var assurePlanDataJson = JSON.parse(assurePlansData[assurePlansListBoxControl.prop('selectedIndex')].Value);
                    for (var i = 0; i < 1; i++) {
                        var assurePlansTableRowHtml = constructTableRowHtml(assurePlanDataJson);
                        selectedAssurePlansTableBodyRowsHtml += assurePlansTableRowHtml;
                    }

                    selectedAssurePlansTableBody.html(selectedAssurePlansTableBodyRowsHtml);
                }

                // build activation plans table
                var selectedActivationPlansTableBodyRowsHtml = "<tr class='odd-table-row'><td class='text-center' colspan=3>No data found</tr></td>";
                var selectedActivationPlansTableBody = $("#activation-plans-table tbody");
            
                if (selectedActivationPlanValues.length > 0) {
                    activationPlansQuantityHeader.css({'visibility':'visible','display':'block'});
                    selectedActivationPlansTableBodyRowsHtml = "";

                    var activationPlanDataJson = JSON.parse(activationPlansData[activationPlansListBoxControl.prop('selectedIndex')].Value);
                    for (var i = 0; i < 1; i++) {
                         var activationPlansTableRowHtml = constructTableRowHtml(activationPlanDataJson);
                        selectedActivationPlansTableBodyRowsHtml += activationPlansTableRowHtml;
                    }

                    selectedActivationPlansTableBody.html(selectedActivationPlansTableBodyRowsHtml);
                }

                quoteTotalTableDiv.css({'visibility':'visible','display':'block'});
                calculateAndUpdateQuoteTotal();
                

            } else {
                quantityHeaderText.text("No items selected");
            }

            // add event listener to quantity inputs
            $('input').on('change click', function() {
                var quantity = $(this).val();
                var unitPrice = Number($(this).parent().prev().text().replace(/[^0-9\.-]+/g,""));
                var total = quantity * unitPrice;
                $(this).parent().next('td').text(total.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));

                // update total
                calculateAndUpdateQuoteTotal()
            });
        }

        function constructTableRowHtml(json){
            var row = "<tr><td>" + json.OrderCode + 
                "</td><td>" + json.Description + 
                "</td><td style='text-align:right'>" + json.Price.toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + 
                "</td><td style='text-align:center'><input type='number' value='1' min='1' style='width:50px;text-align:center;border-color:lightgray'</td>" + 
                "</td><td style='text-align:right'>" + json.Price.toLocaleString('en-US', { style: 'currency', currency: 'USD' }) + "</td></tr>";
            return row;
        };

        function calculateAndUpdateQuoteTotal(){
            var quoteTotal = 0;
            $('tr').each(function(){
                quoteTotal += Number($(this).find('td:last').text().replace(/[^0-9\.-]+/g,""));
            });

            $('#quote-total-value').text(quoteTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
        }

    </script>
}